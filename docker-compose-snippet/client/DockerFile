# Start from the latest golang base image
FROM golang:latest as builder

# Add Maintainer Info
LABEL maintainer="Priyanka Mantala"

# Set the Current Working Directory inside the container
WORKDIR $GOPATH/src/app

# Copy the source from the current directory to the Working Directory inside the container
COPY /client .

# Download all dependencies.
RUN go get ./...

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o client .

######## Start a new stage from scratch #######
FROM alpine:latest  

RUN apk --no-cache add ca-certificates

WORKDIR /app

# Copy the Pre-built binary file from the previous stage
COPY --from=builder go/src/app/client .

# Expose port 8080 to the outside world
EXPOSE 8080

#Declare volumes to mount
VOLUME ["/clientvol"]

# Command to run the executable
CMD ["./client"]